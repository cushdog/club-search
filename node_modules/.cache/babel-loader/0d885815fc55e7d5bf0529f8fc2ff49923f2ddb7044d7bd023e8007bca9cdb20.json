{"ast":null,"code":"var _jsxFileName = \"/Users/tylercushing/Desktop/card-test/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport * as React from 'react';\nimport ActionAreaCard from '../src/Components/ActionAreaCard';\nimport TextField from '@mui/material/TextField';\nimport MultipleSelectCheckmarks from '../src/Components/Tags';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { data } from './clubs';\nimport { usePapaParse } from 'react-papaparse';\nimport BasicSelect from './Components/Accordian';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nameUserInput, setNameUserInput] = useState('');\n  const [descriptionUserInput, setDescriptionUserInput] = useState('');\n  const handleNameInputChange = event => {\n    setNameUserInput(event.target.value);\n  };\n  const handleDescriptionInputChange = event => {\n    setDescriptionUserInput(event.target.value);\n  };\n  let [card_info, updateCardInfo] = useState([]);\n  const {\n    readString\n  } = usePapaParse();\n  useEffect(() => {\n    let card_info = [];\n    const csvString = data;\n    readString(csvString, {\n      worker: true,\n      complete: results => {\n        results.data.forEach(cardData => {\n          card_info.push([cardData[0], cardData[1]]);\n          updateCardInfo([...card_info, [cardData[0], cardData[1]]]);\n        });\n      }\n    });\n  });\n  let textArray = card_info;\n  let text_array_new = textArray.filter(el => {\n    if (nameUserInput === '') {\n      return el;\n    } else {\n      var to_check = el.at(0).toLowerCase();\n      return to_check.includes(nameUserInput);\n    }\n  });\n  let descriptions_array = textArray.filter(el => {\n    if (descriptionUserInput === '') {\n      return el;\n    } else {\n      var to_check = el.at(1).toLowerCase();\n      return to_check.includes(descriptionUserInput);\n    }\n  });\n  let tags_array = [];\n  tags_array = textArray.filter(el => {\n    if (personName === []) {\n      return el;\n    } else {\n      return personName.some(r => el.includes(r));\n    }\n  });\n  const [age, setAge] = useState('');\n  const [personName, setPersonName] = React.useState([]);\n  const handleChangeTags = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName(\n    // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n  const handleChange = event => {\n    setAge(event.target.value);\n    console.log(age);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto bg-gray-200 rounded-xl shadow border p-8 m-10\",\n    id: \"clubs_holder\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-3xl text-gray-700 font-bold mb-5\",\n      children: \"Welcome!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BasicSelect, {\n      age: age,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), age === 10 && /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Type in a name..\",\n      value: nameUserInput,\n      onChange: handleNameInputChange,\n      sx: {\n        paddingBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 22\n    }, this), age === 20 && /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Type in a description..\",\n      value: descriptionUserInput,\n      onChange: handleDescriptionInputChange,\n      sx: {\n        paddingBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 22\n    }, this), age === 30 && /*#__PURE__*/_jsxDEV(MultipleSelectCheckmarks, {\n      personName: personName,\n      handleChange: handleChangeTags\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 22\n    }, this), age === 10 && text_array_new.map((item, index) => /*#__PURE__*/_jsxDEV(ActionAreaCard, {\n      title: item.at(0),\n      description: item.at(1)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }, this)), age === 20 && descriptions_array.map((item, index) => /*#__PURE__*/_jsxDEV(ActionAreaCard, {\n      title: item.at(0),\n      description: item.at(1)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this)), age === 30 && tags_array.map((item, index) => /*#__PURE__*/_jsxDEV(ActionAreaCard, {\n      title: item.at(0),\n      description: item.at(1)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"C098d6PJnhPtdC4zfc6O5fV6r68=\", false, function () {\n  return [usePapaParse];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ActionAreaCard","TextField","MultipleSelectCheckmarks","useState","useEffect","data","usePapaParse","BasicSelect","jsxDEV","_jsxDEV","App","_s","nameUserInput","setNameUserInput","descriptionUserInput","setDescriptionUserInput","handleNameInputChange","event","target","value","handleDescriptionInputChange","card_info","updateCardInfo","readString","csvString","worker","complete","results","forEach","cardData","push","textArray","text_array_new","filter","el","to_check","at","toLowerCase","includes","descriptions_array","tags_array","personName","some","r","age","setAge","setPersonName","handleChangeTags","split","handleChange","console","log","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","sx","paddingBottom","map","item","index","title","description","_c","$RefreshReg$"],"sources":["/Users/tylercushing/Desktop/card-test/src/App.js"],"sourcesContent":["import './App.css';\nimport * as React from 'react';\nimport ActionAreaCard from '../src/Components/ActionAreaCard';\nimport TextField from '@mui/material/TextField';\nimport MultipleSelectCheckmarks from '../src/Components/Tags';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport { data } from './clubs';\n\nimport { usePapaParse } from 'react-papaparse';\nimport BasicSelect from './Components/Accordian';\n\n\nfunction App() {\n  const [nameUserInput, setNameUserInput] = useState('');\n  const [descriptionUserInput, setDescriptionUserInput] = useState('');\n  \n  const handleNameInputChange = (event) => {\n    setNameUserInput(event.target.value);\n  };\n\n  const handleDescriptionInputChange = (event) => {\n    setDescriptionUserInput(event.target.value);\n  };\n\n\n  let [card_info, updateCardInfo] = useState([]);\n\n  \n  const { readString } = usePapaParse();\n  useEffect(() => {\n    let card_info = [];\n    const csvString = data;\n\n  \n    readString(csvString, {\n      worker: true,\n      complete: (results) => {\n        results.data.forEach((cardData) => {\n          card_info.push([cardData[0], cardData[1]]);\n          updateCardInfo([...card_info, [cardData[0], cardData[1]]]);\n        });\n      },\n    });\n  });\n\n  let textArray = card_info;\n\n  let text_array_new = textArray.filter((el) => {\n\t\tif (nameUserInput === '') {\n\t\t\treturn el;\n\t\t} else {\n\t\t\tvar to_check = el.at(0).toLowerCase();\n\t\t\treturn to_check.includes(nameUserInput);\n\t\t}\n\t})\n\n  let descriptions_array = textArray.filter((el) => {\n\t\tif (descriptionUserInput === '') {\n\t\t\treturn el;\n\t\t} else {\n\t\t\tvar to_check = el.at(1).toLowerCase();\n\t\t\treturn to_check.includes(descriptionUserInput);\n\t\t}\n\t})\n\n  let tags_array = [];\n\n  \n  tags_array = textArray.filter((el) => {\n\t\tif (personName === []) {\n\t\t\treturn el;\n\t\t} else {\n\t\t\treturn personName.some(r=> el.includes(r));\n\t\t}\n\t})\n\n  const [age, setAge] = useState('');\n\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChangeTags = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n    console.log(age)\n  };\n\n\n\n  return (\n    <div className=\"container mx-auto bg-gray-200 rounded-xl shadow border p-8 m-10\" id='clubs_holder'>\n      <p className=\"text-3xl text-gray-700 font-bold mb-5\">\n        Welcome!\n      </p>\n\n      <BasicSelect age={age} handleChange={handleChange} />\n\n      \n\n      {age === 10 && <TextField label=\"Type in a name..\" value={nameUserInput} onChange={handleNameInputChange} sx={{paddingBottom: '10px'}} />}\n      {age === 20 && <TextField label=\"Type in a description..\" value={descriptionUserInput} onChange={handleDescriptionInputChange} sx={{paddingBottom: '10px'}} />}\n      {age === 30 && <MultipleSelectCheckmarks personName={personName} handleChange={handleChangeTags} />}\n\n      \n      {age === 10 &&\n        text_array_new.map((item, index) => (\n          <ActionAreaCard key={index} title={item.at(0)} description={item.at(1)} />\n        ))}\n\n      {age === 20 &&\n        descriptions_array.map((item, index) => (\n          <ActionAreaCard key={index} title={item.at(0)} description={item.at(1)} />\n        ))}\n\n      {age === 30 &&\n              tags_array.map((item, index) => (\n                <ActionAreaCard key={index} title={item.at(0)} description={item.at(1)} />\n              ))}\n\n      \n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}