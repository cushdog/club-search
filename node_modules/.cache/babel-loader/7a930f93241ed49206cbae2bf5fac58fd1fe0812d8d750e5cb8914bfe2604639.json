{"ast":null,"code":"var _jsxFileName = \"/Users/tylercushing/Desktop/card-test/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport * as React from 'react';\nimport ActionAreaCard from '../src/Components/ActionAreaCard';\nimport TextField from '@mui/material/TextField';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { data } from './clubs';\nimport { usePapaParse } from 'react-papaparse';\n\n// function myFunction() {\n//   // Declare variables\n//   var input, filter, ul, li, a, i, txtValue;\n//   input = document.getElementById('myInput');\n//   filter = input.value.toUpperCase();\n//   ul = document.getElementById(\"club_cards\");\n//   li = ul.getElementsByTagName('li');\n\n//   // Loop through all list items, and hide those who don't match the search query\n//   for (i = 0; i < li.length; i++) {\n//     a = li[i].getElementsByTagName(\"a\")[0];\n//     txtValue = a.textContent || a.innerText;\n//     if (txtValue.toUpperCase().indexOf(filter) > -1) {\n//       li[i].style.display = \"\";\n//     } else {\n//       li[i].style.display = \"none\";\n//     }\n//   }\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const handleInputChange = event => {\n    setUserInput(event.target.value);\n  };\n  let [card_info, updateCardInfo] = useState([]);\n  const {\n    readString\n  } = usePapaParse();\n  useEffect(() => {\n    let card_info = [];\n    const csvString = data;\n    readString(csvString, {\n      worker: true,\n      complete: results => {\n        results.data.forEach(cardData => {\n          card_info.push(cardData[0]);\n          updateCardInfo([...card_info, cardData[0]]);\n        });\n      }\n    });\n  });\n  let expenses_new = expenses.filter(el => {\n    if (props.input === '') {\n      return el;\n    } else {\n      var to_check = el.name.toLowerCase();\n      return to_check.includes(props.input);\n    }\n  });\n  let textArray = card_info;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto bg-gray-200 rounded-xl shadow border p-8 m-10\",\n    id: \"clubs_holder\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-3xl text-gray-700 font-bold mb-5\",\n      children: \"Welcome!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter Text\",\n      value: userInput,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), textArray.map((text, index) => /*#__PURE__*/_jsxDEV(ActionAreaCard, {\n      description: text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sVTV4r18Eq/rMQ8oYNkvKfrVG0o=\", false, function () {\n  return [usePapaParse];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ActionAreaCard","TextField","useState","useEffect","data","usePapaParse","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","handleInputChange","event","target","value","card_info","updateCardInfo","readString","csvString","worker","complete","results","forEach","cardData","push","expenses_new","expenses","filter","el","props","input","to_check","name","toLowerCase","includes","textArray","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","map","text","index","description","_c","$RefreshReg$"],"sources":["/Users/tylercushing/Desktop/card-test/src/App.js"],"sourcesContent":["import './App.css';\nimport * as React from 'react';\nimport ActionAreaCard from '../src/Components/ActionAreaCard';\nimport TextField from '@mui/material/TextField';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport { data } from './clubs';\n\nimport { usePapaParse } from 'react-papaparse';\n\n// function myFunction() {\n//   // Declare variables\n//   var input, filter, ul, li, a, i, txtValue;\n//   input = document.getElementById('myInput');\n//   filter = input.value.toUpperCase();\n//   ul = document.getElementById(\"club_cards\");\n//   li = ul.getElementsByTagName('li');\n\n//   // Loop through all list items, and hide those who don't match the search query\n//   for (i = 0; i < li.length; i++) {\n//     a = li[i].getElementsByTagName(\"a\")[0];\n//     txtValue = a.textContent || a.innerText;\n//     if (txtValue.toUpperCase().indexOf(filter) > -1) {\n//       li[i].style.display = \"\";\n//     } else {\n//       li[i].style.display = \"none\";\n//     }\n//   }\n// }\n\n\n\nfunction App() {\n  const [userInput, setUserInput] = useState('');\n  \n  const handleInputChange = (event) => {\n    setUserInput(event.target.value);\n  };\n\n\n  let [card_info, updateCardInfo] = useState([]);\n\n  \n  const { readString } = usePapaParse();\n  useEffect(() => {\n    let card_info = [];\n    const csvString = data;\n\n  \n    readString(csvString, {\n      worker: true,\n      complete: (results) => {\n        results.data.forEach((cardData) => {\n          card_info.push(cardData[0]);\n          updateCardInfo([...card_info, cardData[0]]);\n        });\n      },\n    });\n  });\n\n\n  let expenses_new = expenses.filter((el) => {\n\t\tif (props.input === '') {\n\t\t\treturn el;\n\t\t} else {\n\t\t\tvar to_check = el.name.toLowerCase();\n\t\t\treturn to_check.includes(props.input);\n\t\t}\n\t})\n  let textArray = card_info;\n\n  return (\n    <div className=\"container mx-auto bg-gray-200 rounded-xl shadow border p-8 m-10\" id='clubs_holder'>\n      <p className=\"text-3xl text-gray-700 font-bold mb-5\">\n        Welcome!\n      </p>\n\n      <TextField\n          label=\"Enter Text\"\n          value={userInput}\n          onChange={handleInputChange}\n        />\n\n      {textArray.map((text, index) => (\n        <ActionAreaCard key={index} description={text} />\n      ))}\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}